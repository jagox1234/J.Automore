{
  "name": "copilot-chief-agent",
  "displayName": "Copilot Chief Agent",
  "description": "Agente autónomo que dirige a GitHub Copilot para cumplir objetivos.",
  "version": "0.1.50",
  "publisher": "jautomore",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./src/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "copilotChief.startAgent",
        "title": "Copilot Chief: Iniciar Agente"
      },
      {
        "command": "copilotChief.stopAgent",
        "title": "Copilot Chief: Detener Agente"
      },
      {
        "command": "copilotChief.checkUpdates",
        "title": "Copilot Chief: Buscar Actualizaciones"
      },
      {
        "command": "copilotChief.diagnose",
        "title": "Copilot Chief: Diagnóstico"
      },
      {
        "command": "copilotChief.statusPanel",
        "title": "Copilot Chief: Estado"
      },
      {
        "command": "copilotChief.setApiKey",
        "title": "Copilot Chief: Configurar OpenAI API Key"
      },
      {
        "command": "copilotChief.testApiKey",
        "title": "Copilot Chief: Probar API Key"
      },
      {
        "command": "copilotChief.commands",
        "title": "Copilot Chief: Comandos"
      },
      {
        "command": "copilotChief.forceUpdateNow",
        "title": "Copilot Chief: Forzar Instalación Última Versión"
      },
      {
        "command": "copilotChief.skipCurrentStep",
        "title": "Copilot Chief: Saltar Paso Actual"
      },
      {
        "command": "copilotChief.regeneratePlan",
        "title": "Copilot Chief: Regenerar Plan"
      },
      {
        "command": "copilotChief.nextStep",
        "title": "Copilot Chief: Siguiente Paso (confirmación manual)"
      },
      {
        "command": "copilotChief.openRequests",
        "title": "Copilot Chief: Abrir Solicitudes (Command Bridge)"
      },
      {
        "command": "copilotChief.console",
        "title": "Copilot Chief: Consola de Actividad"
      }
    ],
    "configuration": {
      "title": "Copilot Chief Agent",
      "properties": {
        "copilotChief.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key para ChatGPT (se recomienda usar el Secret Storage en futuras versiones)"
        },
        "copilotChief.model": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "Modelo de OpenAI a usar"
        },
        "copilotChief.maxPlanSteps": {
          "type": "number",
          "default": 15,
          "description": "Límite máximo de pasos generados en el plan inicial"
        },
        "copilotChief.autoGitCommit": {
          "type": "boolean",
          "default": false,
          "description": "Si está activo, al completar cada paso crea un commit automático con el mensaje del paso"
        },
        "copilotChief.autoUpdateCheck": {
          "type": "boolean",
          "default": true,
          "description": "Comprueba en el arranque si hay una versión nueva en GitHub Releases y ofrece actualizar"
        },
        "copilotChief.autoUpdateSilent": {
          "type": "boolean",
          "default": false,
          "description": "Si hay nueva versión la instala sin preguntar (requiere CLI 'code' en PATH)"
        },
        "copilotChief.updatePollMinutes": {
          "type": "number",
          "default": 15,
          "description": "Intervalo (min) para volver a comprobar releases (0 desactiva)."
        },
        "copilotChief.confirmEachStep": {
          "type": "boolean",
          "default": false,
          "description": "Si está activo, el agente espera confirmación manual antes de insertar el siguiente paso (comando 'Siguiente Paso')."
        },
        "copilotChief.enableCommandBridge": {
          "type": "boolean",
          "default": true,
          "description": "Activa el puente de comandos (requests.json) para ejecutar comandos aprobados automáticamente."
        },
        "copilotChief.commandPollingSeconds": {
          "type": "number",
          "default": 15,
          "description": "Intervalo en segundos para revisar nuevas solicitudes de comandos."
        },
        "copilotChief.allowedCommands": {
          "type": "array",
          "default": [
            "^npm test",
            "^npm run build"
          ],
          "description": "Regex de comandos permitidos automáticamente (evaluadas en orden)."
        },
        "copilotChief.blockedCommands": {
          "type": "array",
          "default": [
            "rm ",
            "del ",
            "shutdown",
            "reboot"
          ],
          "description": "Patrones (substring) bloqueados siempre."
        },
        "copilotChief.commandTimeoutSeconds": {
          "type": "number",
          "default": 60,
          "description": "Tiempo máximo (s) por comando del bridge antes de marcar timeout."
        },
        "copilotChief.commandCooldownSeconds": {
          "type": "number",
          "default": 120,
          "description": "Cooldown mínimo (s) antes de volver a ejecutar exactamente el mismo comando."
        },
        "copilotChief.maxConcurrentBridgeCommands": {
          "type": "number",
          "default": 1,
          "description": "Máximo de comandos simultáneos (running) permitidos."
        },
        "copilotChief.commandResultMaxLines": {
          "type": "number",
          "default": 5,
          "description": "Número máximo de líneas del resultado guardadas (últimas N)."
        },
        "copilotChief.commandArchiveMaxAgeDays": {
          "type": "number",
          "default": 3,
          "description": "Días después de los cuales una entry (done/error/rejected) se elimina del requests.json para evitar crecimiento infinito (0=desactiva)."
        },
        "copilotChief.commandBridgeNotify": {
          "type": "boolean",
          "default": true,
          "description": "Muestra notificaciones al completar (done/error) o rechazar (rejected) comandos del bridge."
        }
      }
    }
  },
  "scripts": {
    "package": "vsce package || echo 'Instala vsce si falta'",
    "lint": "eslint src --max-warnings=0 || exit 1",
    "test": "jest --runInBand"
  },
  "dependencies": {
    "openai": "^4.0.0",
    "node-fetch": "^3.3.2"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "eslint": "^9.9.0",
    "@eslint/js": "^9.9.0",
    "globals": "^15.7.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jagox1234/J.Automore"
  }
}
